// <auto-generated />
using System;
using Labb1MVC_V3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb1MVC_V3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220916102440_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb1MVC_V3.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookAuthor = "Wilson Rutherford",
                            BookName = "payment National",
                            Description = "channels override"
                        },
                        new
                        {
                            BookId = 2,
                            BookAuthor = "Marlen Konopelski",
                            BookName = "Australia Auto Loan Account",
                            Description = "optical Integration"
                        },
                        new
                        {
                            BookId = 3,
                            BookAuthor = "Margarita Zieme",
                            BookName = "Savings Account",
                            Description = "Lead Solutions"
                        },
                        new
                        {
                            BookId = 4,
                            BookAuthor = "Omari Jacobson",
                            BookName = "Mount contingency Auto Loan Account",
                            Description = "disintermediate"
                        },
                        new
                        {
                            BookId = 5,
                            BookAuthor = "Addison Brakus",
                            BookName = "azure",
                            Description = "HTTP cross-media array"
                        },
                        new
                        {
                            BookId = 6,
                            BookAuthor = "Nyasia Feil",
                            BookName = "Dobra Awesome compressing",
                            Description = "online Sleek"
                        },
                        new
                        {
                            BookId = 7,
                            BookAuthor = "Maymie Gulgowski",
                            BookName = "synthesizing Practical Fresh Sausages",
                            Description = "parse"
                        },
                        new
                        {
                            BookId = 8,
                            BookAuthor = "Shania Olson",
                            BookName = "Rustic Fresh Chicken Games, Tools & Beauty",
                            Description = "Rhode Island"
                        },
                        new
                        {
                            BookId = 9,
                            BookAuthor = "Hallie Bashirian",
                            BookName = "Handmade Cotton Shoes Investor",
                            Description = "contingency"
                        },
                        new
                        {
                            BookId = 10,
                            BookAuthor = "Gabriel Feil",
                            BookName = "eyeballs models efficient",
                            Description = "plug-and-play quantify"
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("CustomerFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("CustomerLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerEmail = "Caesar.Schultz44@hotmail.com",
                            CustomerFName = "Bailee",
                            CustomerLName = "Weissnat"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerEmail = "Eino_Bode9@yahoo.com",
                            CustomerFName = "Loy",
                            CustomerLName = "McGlynn"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerEmail = "Amanda9@hotmail.com",
                            CustomerFName = "Magnus",
                            CustomerLName = "Howell"
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerEmail = "Cloyd_Leuschke78@yahoo.com",
                            CustomerFName = "Chelsie",
                            CustomerLName = "Hamill"
                        },
                        new
                        {
                            CustomerId = 5,
                            CustomerEmail = "Jimmie9@hotmail.com",
                            CustomerFName = "Lilliana",
                            CustomerLName = "Treutel"
                        },
                        new
                        {
                            CustomerId = 6,
                            CustomerEmail = "Wendy.Marks5@hotmail.com",
                            CustomerFName = "Javonte",
                            CustomerLName = "Hand"
                        },
                        new
                        {
                            CustomerId = 7,
                            CustomerEmail = "Kamryn_Pacocha@yahoo.com",
                            CustomerFName = "Jayde",
                            CustomerLName = "Langosh"
                        },
                        new
                        {
                            CustomerId = 8,
                            CustomerEmail = "Ron.Ryan70@hotmail.com",
                            CustomerFName = "Joshua",
                            CustomerLName = "DuBuque"
                        },
                        new
                        {
                            CustomerId = 9,
                            CustomerEmail = "Rachael.Baumbach@hotmail.com",
                            CustomerFName = "Kira",
                            CustomerLName = "Marquardt"
                        },
                        new
                        {
                            CustomerId = 10,
                            CustomerEmail = "Kenton.Vandervort@gmail.com",
                            CustomerFName = "Florida",
                            CustomerLName = "Cruickshank"
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.LoanedBook", b =>
                {
                    b.Property<int>("LoanedBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanedBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loan");

                    b.HasData(
                        new
                        {
                            LoanedBookId = 1,
                            BookId = 6,
                            CustomerId = 3,
                            LoanDate = new DateTime(2022, 9, 16, 12, 24, 40, 703, DateTimeKind.Local).AddTicks(9207)
                        },
                        new
                        {
                            LoanedBookId = 2,
                            BookId = 2,
                            CustomerId = 3,
                            LoanDate = new DateTime(2022, 9, 16, 12, 24, 40, 706, DateTimeKind.Local).AddTicks(535)
                        },
                        new
                        {
                            LoanedBookId = 3,
                            BookId = 2,
                            CustomerId = 7,
                            LoanDate = new DateTime(2022, 9, 16, 12, 24, 40, 706, DateTimeKind.Local).AddTicks(703)
                        },
                        new
                        {
                            LoanedBookId = 4,
                            BookId = 9,
                            CustomerId = 3,
                            LoanDate = new DateTime(2022, 9, 16, 12, 24, 40, 706, DateTimeKind.Local).AddTicks(717)
                        },
                        new
                        {
                            LoanedBookId = 5,
                            BookId = 1,
                            CustomerId = 3,
                            LoanDate = new DateTime(2022, 9, 16, 12, 24, 40, 706, DateTimeKind.Local).AddTicks(727)
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.LoanedBook", b =>
                {
                    b.HasOne("Labb1MVC_V3.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1MVC_V3.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
