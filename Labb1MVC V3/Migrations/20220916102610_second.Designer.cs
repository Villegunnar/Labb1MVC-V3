// <auto-generated />
using System;
using Labb1MVC_V3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb1MVC_V3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220916102610_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb1MVC_V3.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookAuthor = "Kelly Lemke",
                            BookName = "Groves auxiliary",
                            Description = "Minima sed neque enim."
                        },
                        new
                        {
                            BookId = 2,
                            BookAuthor = "Jamie Schneider",
                            BookName = "Metrics Hong Kong Group",
                            Description = "Et numquam ut itaque."
                        },
                        new
                        {
                            BookId = 3,
                            BookAuthor = "Kallie Walsh",
                            BookName = "Strategist",
                            Description = "Suscipit qui et accusamus et aspernatur ut."
                        },
                        new
                        {
                            BookId = 4,
                            BookAuthor = "Gerry Ritchie",
                            BookName = "real-time software Iceland",
                            Description = "Rerum vel ut aliquid aut perferendis commodi sint."
                        },
                        new
                        {
                            BookId = 5,
                            BookAuthor = "Karelle Leuschke",
                            BookName = "Cove",
                            Description = "Quod adipisci facilis reiciendis."
                        },
                        new
                        {
                            BookId = 6,
                            BookAuthor = "Dominique Greenfelder",
                            BookName = "attitude",
                            Description = "Iusto non ipsa sint beatae nobis quo."
                        },
                        new
                        {
                            BookId = 7,
                            BookAuthor = "Alec Cummerata",
                            BookName = "directional strategic",
                            Description = "Similique voluptatem aliquid voluptatem cupiditate."
                        },
                        new
                        {
                            BookId = 8,
                            BookAuthor = "Kory Mayer",
                            BookName = "Roads",
                            Description = "Rerum nihil magni quam id consequatur sunt nemo."
                        },
                        new
                        {
                            BookId = 9,
                            BookAuthor = "Kennith Gibson",
                            BookName = "parse Lights deliverables",
                            Description = "Pariatur culpa dolorem voluptatum et."
                        },
                        new
                        {
                            BookId = 10,
                            BookAuthor = "Everette Kautzer",
                            BookName = "Handmade Wooden Cheese implement Berkshire",
                            Description = "Velit quam eos tempore delectus quasi quisquam magnam animi."
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("CustomerFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("CustomerLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerEmail = "Ova46@hotmail.com",
                            CustomerFName = "Reed",
                            CustomerLName = "Volkman"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerEmail = "Hallie.Schowalter@yahoo.com",
                            CustomerFName = "Morgan",
                            CustomerLName = "Zieme"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerEmail = "Turner51@gmail.com",
                            CustomerFName = "Romaine",
                            CustomerLName = "Friesen"
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerEmail = "Erik_Corkery@yahoo.com",
                            CustomerFName = "Bailey",
                            CustomerLName = "Anderson"
                        },
                        new
                        {
                            CustomerId = 5,
                            CustomerEmail = "Dangelo23@yahoo.com",
                            CustomerFName = "Sheila",
                            CustomerLName = "Lakin"
                        },
                        new
                        {
                            CustomerId = 6,
                            CustomerEmail = "Maverick73@hotmail.com",
                            CustomerFName = "Rosemary",
                            CustomerLName = "Hodkiewicz"
                        },
                        new
                        {
                            CustomerId = 7,
                            CustomerEmail = "Leila_Wolf@yahoo.com",
                            CustomerFName = "Fae",
                            CustomerLName = "Weissnat"
                        },
                        new
                        {
                            CustomerId = 8,
                            CustomerEmail = "Evan71@hotmail.com",
                            CustomerFName = "Micheal",
                            CustomerLName = "Rohan"
                        },
                        new
                        {
                            CustomerId = 9,
                            CustomerEmail = "Josiah_Runte48@yahoo.com",
                            CustomerFName = "Stephen",
                            CustomerLName = "Collins"
                        },
                        new
                        {
                            CustomerId = 10,
                            CustomerEmail = "Felipe_Cartwright34@hotmail.com",
                            CustomerFName = "Alicia",
                            CustomerLName = "Denesik"
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.LoanedBook", b =>
                {
                    b.Property<int>("LoanedBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanedBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loan");

                    b.HasData(
                        new
                        {
                            LoanedBookId = 1,
                            BookId = 1,
                            CustomerId = 3,
                            LoanDate = new DateTime(2022, 9, 16, 12, 26, 10, 683, DateTimeKind.Local).AddTicks(8971)
                        },
                        new
                        {
                            LoanedBookId = 2,
                            BookId = 8,
                            CustomerId = 7,
                            LoanDate = new DateTime(2022, 9, 16, 12, 26, 10, 685, DateTimeKind.Local).AddTicks(8733)
                        },
                        new
                        {
                            LoanedBookId = 3,
                            BookId = 1,
                            CustomerId = 2,
                            LoanDate = new DateTime(2022, 9, 16, 12, 26, 10, 685, DateTimeKind.Local).AddTicks(8870)
                        },
                        new
                        {
                            LoanedBookId = 4,
                            BookId = 7,
                            CustomerId = 2,
                            LoanDate = new DateTime(2022, 9, 16, 12, 26, 10, 685, DateTimeKind.Local).AddTicks(8885)
                        },
                        new
                        {
                            LoanedBookId = 5,
                            BookId = 9,
                            CustomerId = 7,
                            LoanDate = new DateTime(2022, 9, 16, 12, 26, 10, 685, DateTimeKind.Local).AddTicks(8894)
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.LoanedBook", b =>
                {
                    b.HasOne("Labb1MVC_V3.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1MVC_V3.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
