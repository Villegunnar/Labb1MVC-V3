// <auto-generated />
using System;
using Labb1MVC_V3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb1MVC_V3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220916102707_third")]
    partial class third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb1MVC_V3.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookAuthor = "Lesly Olson",
                            BookName = "convergence access Product",
                            Description = "Cumque aut sed velit delectus eveniet doloribus assumenda ipsum. Dicta velit incidunt tenetur velit voluptas quas. Non nostrum aut in."
                        },
                        new
                        {
                            BookId = 2,
                            BookAuthor = "Gage Rohan",
                            BookName = "e-enable",
                            Description = "Nemo dolore aut omnis et. Ratione molestiae voluptatibus cupiditate deserunt voluptas. Atque ut cumque non ut. Est inventore et ea dolores. Saepe corporis qui id corporis deserunt ratione magnam."
                        },
                        new
                        {
                            BookId = 3,
                            BookAuthor = "Lesly Larkin",
                            BookName = "PCI Technician",
                            Description = "Occaecati nobis itaque non soluta repudiandae voluptatem soluta nobis odit. Magni quaerat quas voluptas reiciendis eum. Eos quia amet soluta non dignissimos excepturi voluptas. Mollitia qui similique et dolorem nisi qui."
                        },
                        new
                        {
                            BookId = 4,
                            BookAuthor = "Cleora Effertz",
                            BookName = "microchip",
                            Description = "Inventore et corrupti id quia consectetur ea. Asperiores vel necessitatibus autem earum qui voluptas. Quos sit quo nostrum quisquam hic sed blanditiis officia. Fugit tempora quia dolor quidem molestias placeat qui magni."
                        },
                        new
                        {
                            BookId = 5,
                            BookAuthor = "Gina O'Hara",
                            BookName = "Road",
                            Description = "Minus facere omnis. Ea esse iusto delectus nihil dolor. Aspernatur repellendus odit dolores doloremque. Suscipit architecto dolores velit."
                        },
                        new
                        {
                            BookId = 6,
                            BookAuthor = "Lisa Cartwright",
                            BookName = "grey",
                            Description = "Enim repellendus et amet doloremque expedita eius consequatur optio. Eum optio temporibus sequi. Blanditiis dolores et. Accusantium sunt velit. Illo in magni et occaecati sunt vel."
                        },
                        new
                        {
                            BookId = 7,
                            BookAuthor = "Cierra Bergstrom",
                            BookName = "solution-oriented payment Customer",
                            Description = "Consequuntur suscipit aut hic autem nisi aliquam eos quisquam dolore. Dicta similique sed eveniet tempora sunt est eveniet alias optio. Ipsam voluptatem aut debitis consequuntur et nesciunt et hic."
                        },
                        new
                        {
                            BookId = 8,
                            BookAuthor = "Katelyn Braun",
                            BookName = "Corporate Cliff",
                            Description = "In eum pariatur dolores pariatur adipisci aliquam praesentium possimus. Reiciendis culpa dolorem consequuntur consectetur suscipit sit est. Et eius facere voluptatibus illum exercitationem iure dolor et."
                        },
                        new
                        {
                            BookId = 9,
                            BookAuthor = "Emery Weissnat",
                            BookName = "wireless Berkshire Rubber",
                            Description = "Et fuga libero maxime totam molestiae. Quam dolor hic odit inventore. Aliquam cumque error est ea aperiam quo laudantium sit."
                        },
                        new
                        {
                            BookId = 10,
                            BookAuthor = "Giuseppe Skiles",
                            BookName = "CFA Franc BCEAO Games & Movies Tajikistan",
                            Description = "Debitis omnis consequatur excepturi necessitatibus molestiae delectus qui deleniti et. Qui non nihil unde tenetur repudiandae et ut consequatur. Et ut consequatur blanditiis esse adipisci commodi aliquam architecto porro."
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("CustomerFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("CustomerLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerEmail = "Adriana.Nikolaus90@hotmail.com",
                            CustomerFName = "Lucie",
                            CustomerLName = "Halvorson"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerEmail = "Alphonso29@yahoo.com",
                            CustomerFName = "Jerod",
                            CustomerLName = "Mueller"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerEmail = "Vicky.Kuhic@yahoo.com",
                            CustomerFName = "Janie",
                            CustomerLName = "Lakin"
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerEmail = "Coby_Beer@yahoo.com",
                            CustomerFName = "Amie",
                            CustomerLName = "Blick"
                        },
                        new
                        {
                            CustomerId = 5,
                            CustomerEmail = "Trevion89@yahoo.com",
                            CustomerFName = "Lee",
                            CustomerLName = "Connelly"
                        },
                        new
                        {
                            CustomerId = 6,
                            CustomerEmail = "Alec_Ruecker@gmail.com",
                            CustomerFName = "Selena",
                            CustomerLName = "Lesch"
                        },
                        new
                        {
                            CustomerId = 7,
                            CustomerEmail = "Lorena72@hotmail.com",
                            CustomerFName = "Dillan",
                            CustomerLName = "Koch"
                        },
                        new
                        {
                            CustomerId = 8,
                            CustomerEmail = "Daren.Rice@gmail.com",
                            CustomerFName = "Ryann",
                            CustomerLName = "Parker"
                        },
                        new
                        {
                            CustomerId = 9,
                            CustomerEmail = "Rick89@yahoo.com",
                            CustomerFName = "Neoma",
                            CustomerLName = "Kemmer"
                        },
                        new
                        {
                            CustomerId = 10,
                            CustomerEmail = "Lourdes_Adams@gmail.com",
                            CustomerFName = "Jayden",
                            CustomerLName = "Watsica"
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.LoanedBook", b =>
                {
                    b.Property<int>("LoanedBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanedBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loan");

                    b.HasData(
                        new
                        {
                            LoanedBookId = 1,
                            BookId = 3,
                            CustomerId = 9,
                            LoanDate = new DateTime(2022, 9, 16, 12, 27, 7, 184, DateTimeKind.Local).AddTicks(9746)
                        },
                        new
                        {
                            LoanedBookId = 2,
                            BookId = 7,
                            CustomerId = 1,
                            LoanDate = new DateTime(2022, 9, 16, 12, 27, 7, 187, DateTimeKind.Local).AddTicks(3411)
                        },
                        new
                        {
                            LoanedBookId = 3,
                            BookId = 7,
                            CustomerId = 8,
                            LoanDate = new DateTime(2022, 9, 16, 12, 27, 7, 187, DateTimeKind.Local).AddTicks(3660)
                        },
                        new
                        {
                            LoanedBookId = 4,
                            BookId = 6,
                            CustomerId = 6,
                            LoanDate = new DateTime(2022, 9, 16, 12, 27, 7, 187, DateTimeKind.Local).AddTicks(3679)
                        },
                        new
                        {
                            LoanedBookId = 5,
                            BookId = 6,
                            CustomerId = 8,
                            LoanDate = new DateTime(2022, 9, 16, 12, 27, 7, 187, DateTimeKind.Local).AddTicks(3691)
                        });
                });

            modelBuilder.Entity("Labb1MVC_V3.Models.LoanedBook", b =>
                {
                    b.HasOne("Labb1MVC_V3.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1MVC_V3.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
